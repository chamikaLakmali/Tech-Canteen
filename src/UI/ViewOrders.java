/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import HybernetSession.HybernetSessionFctory;
import HybernetSession.HybernetSessionFctoryUser;
import UI.Admin.AdminDashboard;
import UI.Admin.OrderInfo;
import UI.Login;
import UI.User.UserDashboard;
import java.awt.Color;
import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.util.concurrent.atomic.AtomicReference;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import org.hibernate.Session;

/**
 *
 * @author Chamika
 */
public class ViewOrders extends javax.swing.JFrame {

    int height=60,theight;
    String pStat="all";
    public ViewOrders() {
        initComponents();
        setTitle();
        if (Login.userType.equals("admin")){
            fill();
        }
        else if (Login.userType.equals("user")){
            fillAccordingtoUser();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        background = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        back = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        close = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        orderstat = new javax.swing.JComboBox<>();
        reset = new javax.swing.JLabel();
        imgLayer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        background.setBackground(new java.awt.Color(255, 255, 255));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jScrollPane1.setViewportView(background);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 930, 350));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel2.setText("Orders");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 320, -1));

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back_icon.png"))); // NOI18N
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 50, 50));

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/closeicon.png"))); // NOI18N
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });

        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout.png"))); // NOI18N
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 883, Short.MAX_VALUE)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(close, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 30));

        orderstat.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        orderstat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Filter Order State", "Pending", "Confirmed", "Rejected", "Dispatched" }));
        orderstat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderstatMouseClicked(evt);
            }
        });
        orderstat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderstatActionPerformed(evt);
            }
        });
        jPanel1.add(orderstat, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 200, -1));

        reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMouseClicked(evt);
            }
        });
        jPanel1.add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 30, 30));

        imgLayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/3.jpeg"))); // NOI18N
        jPanel1.add(imgLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        if (Login.userType.equals("user")){
            UserDashboard dashboard=new UserDashboard();
            dashboard.setVisible(true);
            this.dispose();
        }
        else if (Login.userType.equals("admin")){
            AdminDashboard adminDashboard=new AdminDashboard();
            adminDashboard.setVisible(true);
            this.dispose();
        }
        
    }//GEN-LAST:event_backMouseClicked

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        this.dispose();
    }//GEN-LAST:event_closeMouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        Login log=new Login();
        log.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void orderstatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderstatActionPerformed
        if (Login.userType.equals("admin")){
            if (orderstat.getSelectedIndex()==0){
                fill();
            }
            else{
                String oStat=orderstat.getSelectedItem().toString();
                fillAccordingtoOrderStat(oStat);
            }    
        }
        
        else if(Login.userType.equals("user")){
            if (orderstat.getSelectedIndex()==0){
                fillAccordingtoUser();
            }
            else{
                String oStat=orderstat.getSelectedItem().toString();
                fillAccordingtoOrderStatNuser(oStat);
            }  
            
        }

    }//GEN-LAST:event_orderstatActionPerformed

    private void orderstatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderstatMouseClicked
        
    }//GEN-LAST:event_orderstatMouseClicked

    private void resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseClicked
        orderstat.setSelectedIndex(0);
         if (Login.userType.equals("admin")){
            fill();
        }
        else if (Login.userType.equals("user")){
            fillAccordingtoUser();
        }
    }//GEN-LAST:event_resetMouseClicked

   
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewOrders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel back;
    private javax.swing.JPanel background;
    private javax.swing.JLabel close;
    private javax.swing.JLabel imgLayer;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logout;
    private javax.swing.JComboBox<String> orderstat;
    private javax.swing.JLabel reset;
    // End of variables declaration//GEN-END:variables

    public void fill(){
        
        background.removeAll();
        //System.out.println(pStat);
        setTitle();
        height=60;
        Session session=HybernetSessionFctory.getSessionFactory().openSession();
        final AtomicReference<ResultSet> ordersL=new AtomicReference<>();
        session.doWork(connection->{
            try(CallableStatement cst=connection.prepareCall(
                    "{ call viewAllOrders()}" )){
                
                cst.execute();
                ordersL.set(cst.getResultSet());
                try(ResultSet rs =cst.getResultSet()){
                    if (rs.next()==false){
                        System.out.println("no data");
                                          
                        background.setVisible(false);
                        background.setVisible(true);
                        
                        
                    }
                    else{
                        do{
                            
                            //System.out.println(rs.get);
                            JPanel addPanal = new JPanel();
                            JLabel orderId = new JLabel();
                            JLabel uID = new JLabel();
                            JLabel total = new JLabel();
                            JButton moreInfo = new JButton();
                            JLabel orderStat = new JLabel();


                            addPanal.setBackground(new java.awt.Color(102,204,255));
                            addPanal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                            orderId.setBackground(new java.awt.Color(204, 255, 255));
                            orderId.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            orderId.setText(rs.getString("orderId"));
                            orderId.setOpaque(true);


                            uID.setBackground(new java.awt.Color(204, 255, 255));
                            uID.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            uID.setText(rs.getString("userId"));
                            uID.setOpaque(true);


                            total.setBackground(new java.awt.Color(204, 255, 255));
                            total.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            total.setText(rs.getString("total"));
                            total.setOpaque(true);


                            moreInfo.setBackground(new java.awt.Color(204, 255, 255));
                            moreInfo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            moreInfo.setText("  Order Info>>");
                            moreInfo.setOpaque(true);


                            orderStat.setBackground(new java.awt.Color(204, 255, 255));
                            orderStat.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            orderStat.setText(rs.getString("orderStatus"));
                            orderStat.setOpaque(true);
                            
                            moreInfo.addMouseListener(new java.awt.event.MouseAdapter() {
                                public void mouseClicked(java.awt.event.MouseEvent evt) {
                                    
                                    int id=Integer.parseInt(orderId.getText());
                                    OrderInfo orderInfo=new OrderInfo(id);
                                    orderInfo.setVisible(true);
                                    FrameDispose();
                                    
                                }
                            });
                            
                            if (rs.getString("orderStatus").equals("Rejected")){
                                addPanal.setBackground(Color.red);
                            }


                            addPanal.add(orderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 40));
                            addPanal.add(uID, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 150, 40));
                            addPanal.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 150, 40));
                            addPanal.add(orderStat, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 200, 40));
                            addPanal.add(moreInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 200, 40));

                            background.add(addPanal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10,height , 910, 60));
                            
                            height=height+60;
                            
                            
                            
                        }while(rs.next());
                        
                        
                    }
                }
                
            }
        });
        
    }
    
    // fill data according to user
    public void fillAccordingtoUser(){
        
        
        background.removeAll();
        //System.out.println(pStat);
        setTitle();
        height=60;
        Session session=HybernetSessionFctoryUser.getSessionFactory().openSession();
        final AtomicReference<ResultSet> ordersL=new AtomicReference<>();
        session.doWork(connection->{
            try(CallableStatement cst=connection.prepareCall(
                    "{ call viewMyOrders(?)}" )){
                cst.setString(1, Login.userID);
                cst.execute();
                ordersL.set(cst.getResultSet());
                try(ResultSet rs =cst.getResultSet()){
                    if (rs.next()==false){
                        System.out.println("no data");
                                          
                        background.setVisible(false);
                        background.setVisible(true);
                        
                        
                    }
                    else{
                        do{
                            
                            //System.out.println(rs.get);
                            JPanel addPanal = new JPanel();
                            JLabel orderId = new JLabel();
                            JLabel uID = new JLabel();
                            JLabel total = new JLabel();
                            JButton moreInfo = new JButton();
                            JLabel orderStat = new JLabel();


                            addPanal.setBackground(new java.awt.Color(102,204,255));
                            addPanal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                            orderId.setBackground(new java.awt.Color(204, 255, 255));
                            orderId.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            orderId.setText(rs.getString("orderId"));
                            orderId.setOpaque(true);


                            uID.setBackground(new java.awt.Color(204, 255, 255));
                            uID.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            uID.setText(rs.getString("userId"));
                            uID.setOpaque(true);


                            total.setBackground(new java.awt.Color(204, 255, 255));
                            total.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            total.setText(rs.getString("total"));
                            total.setOpaque(true);


                            moreInfo.setBackground(new java.awt.Color(204, 255, 255));
                            moreInfo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            moreInfo.setText("  Order Info>>");
                            moreInfo.setOpaque(true);


                            orderStat.setBackground(new java.awt.Color(204, 255, 255));
                            orderStat.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            orderStat.setText(rs.getString("orderStatus"));
                            orderStat.setOpaque(true);
                            
                            moreInfo.addMouseListener(new java.awt.event.MouseAdapter() {
                                public void mouseClicked(java.awt.event.MouseEvent evt) {
                                    
                                    int id=Integer.parseInt(orderId.getText());
                                    OrderInfo orderInfo=new OrderInfo(id);
                                    orderInfo.setVisible(true);
                                    FrameDispose();
                                    
                                }
                            });
                            
                            if (rs.getString("orderStatus").equals("Rejected")){
                                addPanal.setBackground(Color.red);
                            }


                            addPanal.add(orderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 40));
                            addPanal.add(uID, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 150, 40));
                            addPanal.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 150, 40));
                            addPanal.add(orderStat, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 200, 40));
                            addPanal.add(moreInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 200, 40));

                            background.add(addPanal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10,height , 910, 60));
                            
                            height=height+60;
                            
                            
                            
                        }while(rs.next());
                        
                        
                    }
                }
                
            }
        });
        session.close();
        
    }
    
    public void fillAccordingtoOrderStat(String oStat){
        System.out.println(oStat); 
        background.removeAll();
        //System.out.println(pStat);
        setTitle();
        height=60;
        Session session=HybernetSessionFctory.getSessionFactory().openSession();
        final AtomicReference<ResultSet> ordersL=new AtomicReference<>();
        session.doWork(connection->{
            try(CallableStatement cst=connection.prepareCall(
                    "{ call viewAllOrdersAccordingToStat(?)}" )){
                cst.setString(1,oStat);
                cst.execute();
                ordersL.set(cst.getResultSet());
                try(ResultSet rs =cst.getResultSet()){
                    if (rs.next()==false){
                        System.out.println("no data");
                                          
                        background.setVisible(false);
                        background.setVisible(true);
                        
                        
                    }
                    else{
                        do{
                            
                            //System.out.println(rs.get);
                            JPanel addPanal = new JPanel();
                            JLabel orderId = new JLabel();
                            JLabel uID = new JLabel();
                            JLabel total = new JLabel();
                            JButton moreInfo = new JButton();
                            JLabel orderStat = new JLabel();


                            addPanal.setBackground(new java.awt.Color(102,204,255));
                            addPanal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                            orderId.setBackground(new java.awt.Color(204, 255, 255));
                            orderId.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            orderId.setText(rs.getString("orderId"));
                            orderId.setOpaque(true);


                            uID.setBackground(new java.awt.Color(204, 255, 255));
                            uID.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            uID.setText(rs.getString("userId"));
                            uID.setOpaque(true);


                            total.setBackground(new java.awt.Color(204, 255, 255));
                            total.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            total.setText(rs.getString("total"));
                            total.setOpaque(true);


                            moreInfo.setBackground(new java.awt.Color(204, 255, 255));
                            moreInfo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            moreInfo.setText("  Order Info>>");
                            moreInfo.setOpaque(true);


                            orderStat.setBackground(new java.awt.Color(204, 255, 255));
                            orderStat.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            orderStat.setText(rs.getString("orderStatus"));
                            orderStat.setOpaque(true);
                            
                            moreInfo.addMouseListener(new java.awt.event.MouseAdapter() {
                                public void mouseClicked(java.awt.event.MouseEvent evt) {
                                    
                                    int id=Integer.parseInt(orderId.getText());
                                    OrderInfo orderInfo=new OrderInfo(id);
                                    orderInfo.setVisible(true);
                                    FrameDispose();
                                    
                                }
                            });
                            
                            if (rs.getString("orderStatus").equals("Rejected")){
                                addPanal.setBackground(Color.red);
                            }


                            addPanal.add(orderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 40));
                            addPanal.add(uID, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 150, 40));
                            addPanal.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 150, 40));
                            addPanal.add(orderStat, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 200, 40));
                            addPanal.add(moreInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 200, 40));

                            background.add(addPanal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10,height , 910, 60));
                            
                            height=height+60;
                            
                            
                            
                        }while(rs.next());
                        
                        
                    }
                }
                
            }
        });
        background.setVisible(false);
        background.setVisible(true);
        
    }
    
    
    public void fillAccordingtoOrderStatNuser(String oStat){
        System.out.println(oStat); 
        background.removeAll();
        //System.out.println(pStat);
        setTitle();
        height=60;
        Session session=HybernetSessionFctoryUser.getSessionFactory().openSession();
        final AtomicReference<ResultSet> ordersL=new AtomicReference<>();
        session.doWork(connection->{
            try(CallableStatement cst=connection.prepareCall(
                    "{ call viewAllOrdersAccordingToStatNuser(?,?)}" )){
                cst.setString(1,Login.userID);
                cst.setString(2,oStat);
                cst.execute();
                ordersL.set(cst.getResultSet());
                try(ResultSet rs =cst.getResultSet()){
                    if (rs.next()==false){
                        System.out.println("no data");
                                          
                        background.setVisible(false);
                        background.setVisible(true);
                        
                        
                    }
                    else{
                        do{
                            
                            //System.out.println(rs.get);
                            JPanel addPanal = new JPanel();
                            JLabel orderId = new JLabel();
                            JLabel uID = new JLabel();
                            JLabel total = new JLabel();
                            JButton moreInfo = new JButton();
                            JLabel orderStat = new JLabel();


                            addPanal.setBackground(new java.awt.Color(102,204,255));
                            addPanal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                            orderId.setBackground(new java.awt.Color(204, 255, 255));
                            orderId.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            orderId.setText(rs.getString("orderId"));
                            orderId.setOpaque(true);


                            uID.setBackground(new java.awt.Color(204, 255, 255));
                            uID.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            uID.setText(rs.getString("userId"));
                            uID.setOpaque(true);


                            total.setBackground(new java.awt.Color(204, 255, 255));
                            total.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            total.setText(rs.getString("total"));
                            total.setOpaque(true);


                            moreInfo.setBackground(new java.awt.Color(204, 255, 255));
                            moreInfo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            moreInfo.setText("  Order Info>>");
                            moreInfo.setOpaque(true);


                            orderStat.setBackground(new java.awt.Color(204, 255, 255));
                            orderStat.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
                            orderStat.setText(rs.getString("orderStatus"));
                            orderStat.setOpaque(true);
                            
                            moreInfo.addMouseListener(new java.awt.event.MouseAdapter() {
                                public void mouseClicked(java.awt.event.MouseEvent evt) {
                                    
                                    int id=Integer.parseInt(orderId.getText());
                                    OrderInfo orderInfo=new OrderInfo(id);
                                    orderInfo.setVisible(true);
                                    FrameDispose();
                                    
                                }
                            });
                            
                            if (rs.getString("orderStatus").equals("Rejected")){
                                addPanal.setBackground(Color.red);
                            }


                            addPanal.add(orderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 40));
                            addPanal.add(uID, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 150, 40));
                            addPanal.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 150, 40));
                            addPanal.add(orderStat, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 200, 40));
                            addPanal.add(moreInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 200, 40));

                            background.add(addPanal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10,height , 910, 60));
                            
                            height=height+60;
                            
                            
                            
                        }while(rs.next());
                        
                        
                    }
                }
                
            }
        });
        background.setVisible(false);
        background.setVisible(true);
        
    }

    public void setTitle(){
        JPanel titlePanal = new JPanel();
        JLabel titleItem1 = new JLabel();
        JLabel titleItem2 = new JLabel();
        JLabel titleItem3 = new JLabel();
        JLabel titleItem4 = new JLabel();
        JLabel titleItem5 = new JLabel();
        JLabel titleItem6 = new JLabel();

        titlePanal.setBackground(new java.awt.Color(255, 255, 255));
        titlePanal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titleItem1.setBackground(new java.awt.Color(102, 204, 255));
        titleItem1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        titleItem1.setText("      Order ID");
        titleItem1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        titleItem1.setOpaque(true);
        titlePanal.add(titleItem1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 40));

        titleItem2.setBackground(new java.awt.Color(102, 204, 255));
        titleItem2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        titleItem2.setText("         User ID");
        titleItem2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        titleItem2.setOpaque(true);
        titlePanal.add(titleItem2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 150, 40));

        titleItem3.setBackground(new java.awt.Color(102, 204, 255));
        titleItem3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        titleItem3.setText("          Total");
        titleItem3.setOpaque(true);
        titlePanal.add(titleItem3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 150, 40));
        
        titleItem4.setBackground(new java.awt.Color(102, 204, 255));
        titleItem4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        titleItem4.setText("  Order Status");
        titleItem4.setOpaque(true);
        titlePanal.add(titleItem4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 200, 40));
        
        titleItem5.setBackground(new java.awt.Color(102, 204, 255));
        titleItem5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        titleItem5.setText("   Order Info ");
        titleItem5.setOpaque(true);
        titlePanal.add(titleItem5, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 200, 40));
        
        

        background.add(titlePanal, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 910, 50));
    }
    
    public void FrameDispose(){
        this.dispose();
    }

}
