/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.Admin;

import HybernetSession.HybernetSessionFctory;
import Pojos.Itemtype;
import Pojos.Model;
import UI.Login;
import java.util.Iterator;
import java.util.List;
import javassist.bytecode.Descriptor;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author Chamika
 */
public class AddModels extends javax.swing.JFrame {

    int typeStatus=1,mdlStatus=1;
    String mdl,t=null;
    int tID;
    public AddModels() {
        initComponents();
        fillCombo();
    }

    AddModels(String t) {
        initComponents();
        fillCombo();
        this.t=t;
       // System.out.println(t);
       mdlType.setSelectedItem(t);
       back.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        lbl4 = new javax.swing.JLabel();
        mdlName = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        error = new javax.swing.JLabel();
        mdlType = new javax.swing.JComboBox<>();
        addType = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        close = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        back = new javax.swing.JLabel();
        img = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        title.setText("Add Item Models");
        jPanel1.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 440, -1));

        lbl2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbl2.setText("Name                    ");
        jPanel1.add(lbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 220, -1));

        lbl4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbl4.setText("Type");
        jPanel1.add(lbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 80, -1));

        mdlName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mdlName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mdlNameMouseClicked(evt);
            }
        });
        mdlName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mdlNameActionPerformed(evt);
            }
        });
        jPanel1.add(mdlName, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 350, 30));

        add.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        add.setText("Add");
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });
        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 370, 150, 50));

        error.setBackground(new java.awt.Color(255, 0, 51));
        error.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        error.setForeground(new java.awt.Color(255, 51, 51));
        jPanel1.add(error, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 310, 510, 40));

        mdlType.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        mdlType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select the Model Type" }));
        jPanel1.add(mdlType, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, 350, 40));

        addType.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        addType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTypeMouseClicked(evt);
            }
        });
        jPanel1.add(addType, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 240, 30, 40));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/closeicon.png"))); // NOI18N
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });

        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logout.png"))); // NOI18N
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 883, Short.MAX_VALUE)
                .addComponent(logout, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(close, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(close, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 30));

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back_icon.png"))); // NOI18N
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 50, 50));

        img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/3.jpeg"))); // NOI18N
        jPanel1.add(img, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        if (mdlName.getText().equals("")|| mdlType.getSelectedIndex()==0){
            error.setText("Please fill all the details..");
        }
        else{
            error.setText("");
            Session msession=HybernetSessionFctory.getSessionFactory().openSession();
            Transaction t=msession.beginTransaction();
            
            mdl=mdlType.getSelectedItem().toString();
            Session tsession=HybernetSessionFctory.getSessionFactory().openSession();
            Transaction tT=tsession.beginTransaction();

            String tsql="FROM Itemtype";
            Query tquery=tsession.createQuery(tsql);
            List <Itemtype> typeList=tquery.list();
            for (Iterator<Itemtype> typeI=typeList.iterator();typeI.hasNext();){
                Itemtype itmType=typeI.next();

                if (mdl.equals(itmType.getName())){
                    tID=itmType.getId();
                }
            }
            String sql="FROM Model";
            Query query=msession.createQuery(sql);
            List <Model> mdlList=query.list();
            
            for (Iterator<Model> ModelI=mdlList.iterator();ModelI.hasNext();){
                Model model=ModelI.next();
                if (mdlName.getText().equals(model.getName()) && model.getType()==tID){
                    mdlStatus=0;
                    
                }
            }
            
            if (mdlStatus==1){
               
                Model addModel=new Model();
               addModel.setName(mdlName.getText());
                addModel.setType(tID);
                msession.save(addModel);
                msession.getTransaction().commit();
                JOptionPane.showMessageDialog(null, "Item model added successfully", "Successful", JOptionPane.INFORMATION_MESSAGE);
                
            }
            else{
                error.setText("Model details have already been added.");
            }
            
        }
    }//GEN-LAST:event_addMouseClicked

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        this.dispose();
    }//GEN-LAST:event_closeMouseClicked

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        Login log=new Login();
        log.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        AdminDashboard admin=new AdminDashboard();
        admin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backMouseClicked

    private void addTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTypeMouseClicked
        error.setText("");
        //String type="noType";
        JFrame frame = new JFrame();
        String type = JOptionPane.showInputDialog(frame, "Enter new type name:");
       // System.out.println(type);
        
        if (type!=null){
            Session tsession=HybernetSessionFctory.getSessionFactory().openSession();
            Transaction t=tsession.beginTransaction();

            String sql="FROM Itemtype";
            Query query=tsession.createQuery(sql);
            List <Itemtype> typeList=query.list();
            for (Iterator<Itemtype> typeI=typeList.iterator();typeI.hasNext();){
                Itemtype itmType=typeI.next();
                if (type.equals(itmType.getName())){
                    typeStatus=0;
                }
            }

            if (typeStatus==1){
                Itemtype itmT=new Itemtype();
                itmT.setName(type);
                tsession.save(itmT);
                tsession.getTransaction().commit();
                fillCombo();
                JOptionPane.showMessageDialog(null, "Item type added successfully", "Successful", JOptionPane.INFORMATION_MESSAGE);

            }
        }
        
       

        
    }//GEN-LAST:event_addTypeMouseClicked

    private void mdlNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mdlNameActionPerformed
        error.setText("");
    }//GEN-LAST:event_mdlNameActionPerformed

    private void mdlNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mdlNameMouseClicked
        error.setText("");
    }//GEN-LAST:event_mdlNameMouseClicked

   public void fillCombo(){
        Session tsession=HybernetSessionFctory.getSessionFactory().openSession();
        Transaction t=tsession.beginTransaction();
        
        String sql="FROM Itemtype";
        Query query=tsession.createQuery(sql);
        List <Itemtype> typeList=query.list();
        for (Iterator<Itemtype> typeI=typeList.iterator();typeI.hasNext();){
            Itemtype itmType=typeI.next();
            mdlType.addItem(itmType.getName());
        }
       
       
   }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddModels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddModels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddModels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddModels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddModels().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JLabel addType;
    private javax.swing.JLabel back;
    private javax.swing.JLabel close;
    private javax.swing.JLabel error;
    private javax.swing.JLabel img;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl4;
    private javax.swing.JLabel logout;
    private javax.swing.JTextField mdlName;
    private javax.swing.JComboBox<String> mdlType;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
